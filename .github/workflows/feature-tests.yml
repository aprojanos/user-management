name: Feature Tests

on:
  push:
    branches: [ master ] 
  pull_request:
    branches: [ master ] 

jobs:
  feature-tests:
    runs-on: ubuntu-latest
    
    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: usermanagement
      DB_USERNAME: sail
      DB_PASSWORD: password

    services:
      mysql:
        image: mysql/mysql-server:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_ROOT_HOST: '%'
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -ppassword" --health-interval=10s --health-timeout=5s --health-retries=10 --default-authentication-plugin=mysql_native_password
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, fileinfo
          coverage: none

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Copy .env file
        run: cp .env.example .env

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Wait for MySQL Connection
        run: |
          sudo apt-get update -y && sudo apt-get install -y mysql-client
          timeout=60
          while ! mysql -h 127.0.0.1 -u root -ppassword -e "SELECT 1" > /dev/null 2>&1; do
            timeout=$((timeout - 1))
            if [ $timeout -eq 0 ]; then
              echo "Timed out waiting for MySQL to be ready."
              exit 1
            fi
            sleep 1
          done
          echo "MySQL is ready!"

      - name: Run Migrations
        run: php artisan migrate:fresh --seed

      - name: Run Feature Tests
        run: php artisan test --testsuite Feature
